const passport = require('passport');
const GoogleStrategy = require('passport-google-oauth20').Strategy;
const mongoose = require('mongoose');
const keys = require('../config/keys');

const User = mongoose.model('users');

passport.serializeUser((user, done) => {
	done(null, user.id); //this id generated by mongodb
});
passport.deserializeUser((id, done) => {
	User.findById(id).then(user => done(null, user));
});

passport.use(
	new GoogleStrategy(
		{
			clientID: keys.googleClientID,
			clientSecret: keys.googleClientSecret,
			callbackURL: '/auth/google/callback',
			proxy: true
		},
		async (accessToken, refreshToken, profile, done) => {
			//check if the user already exist
			const existingUser = await User.findOne({ googleId: profile.id });
			if (existingUser) {
				//the user exists so we are done here!
				return done(null, existingUser);
			}
			//the user doesn't exist, we create new one
			const user = await new User({ googleId: profile.id }).save();
			done(null, user);
		}
	)
);
